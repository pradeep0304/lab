%{
%}
%%
[0-9]+[.][0-9]+   { printf("%s is a floating point number\n", yytext); }
int|float|char|double|void   { printf("%s is a datatype\n", yytext); }
[0-9]+   { printf("%s is an integer number\n", yytext); }
[a-zA-Z_][a-zA-Z0-9_]*[()]   { printf("%s is a function\n", yytext); }
[a-zA-Z_][a-zA-Z0-9_]*   { printf("%s is an identifier\n", yytext); }
[+=*/-]   { printf("%s is an operator\n", yytext); }
;   { printf("%s is a delimiter\n", yytext); }
,   { printf("%s is a separator\n", yytext); }
#([a-z\.h]+)   { printf("%s is a preprocessor directive\n", yytext); }
\/\/[^\n]*   /* ignore single-line comments */
\/\*([^*]|\*+[^*\/])*\*+\/   /* ignore multi-line comments */
%%
int yywrap(void) {
    return 1;
}

int main() {
    freopen("test.c", "r", stdin);
    yylex();
    return 0;
}
